# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import grpc_modules.rhbatch_pb2 as rhbatch__pb2


class RhBatchStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.register = channel.unary_unary(
        '/th2.RhBatch/register',
        request_serializer=rhbatch__pb2.RhTargetServer.SerializeToString,
        response_deserializer=rhbatch__pb2.RhSessionID.FromString,
        )
    self.unregister = channel.unary_unary(
        '/th2.RhBatch/unregister',
        request_serializer=rhbatch__pb2.RhSessionID.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.executeRhActionsBatch = channel.unary_unary(
        '/th2.RhBatch/executeRhActionsBatch',
        request_serializer=rhbatch__pb2.RhActionsList.SerializeToString,
        response_deserializer=rhbatch__pb2.RhBatchResponse.FromString,
        )


class RhBatchServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def register(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def unregister(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def executeRhActionsBatch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RhBatchServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'register': grpc.unary_unary_rpc_method_handler(
          servicer.register,
          request_deserializer=rhbatch__pb2.RhTargetServer.FromString,
          response_serializer=rhbatch__pb2.RhSessionID.SerializeToString,
      ),
      'unregister': grpc.unary_unary_rpc_method_handler(
          servicer.unregister,
          request_deserializer=rhbatch__pb2.RhSessionID.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'executeRhActionsBatch': grpc.unary_unary_rpc_method_handler(
          servicer.executeRhActionsBatch,
          request_deserializer=rhbatch__pb2.RhActionsList.FromString,
          response_serializer=rhbatch__pb2.RhBatchResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'th2.RhBatch', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
