# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import grpc_modules.act_pb2 as act__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import grpc_modules.rhbatch_pb2 as rhbatch__pb2


class ActStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.register = channel.unary_unary(
        '/th2.Act/register',
        request_serializer=rhbatch__pb2.RhTargetServer.SerializeToString,
        response_deserializer=rhbatch__pb2.RhSessionID.FromString,
        )
    self.unregister = channel.unary_unary(
        '/th2.Act/unregister',
        request_serializer=rhbatch__pb2.RhSessionID.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.login = channel.unary_unary(
        '/th2.Act/login',
        request_serializer=act__pb2.LoginRequest.SerializeToString,
        response_deserializer=rhbatch__pb2.RhBatchResponse.FromString,
        )
    self.logout = channel.unary_unary(
        '/th2.Act/logout',
        request_serializer=act__pb2.BasicWebGuiRequest.SerializeToString,
        response_deserializer=rhbatch__pb2.RhBatchResponse.FromString,
        )
    self.checkUserName = channel.unary_unary(
        '/th2.Act/checkUserName',
        request_serializer=act__pb2.CheckUserNameRequest.SerializeToString,
        response_deserializer=rhbatch__pb2.RhBatchResponse.FromString,
        )
    self.checkFeedbackButton = channel.unary_unary(
        '/th2.Act/checkFeedbackButton',
        request_serializer=act__pb2.BasicWebGuiRequest.SerializeToString,
        response_deserializer=rhbatch__pb2.RhBatchResponse.FromString,
        )
    self.checkHelpButton = channel.unary_unary(
        '/th2.Act/checkHelpButton',
        request_serializer=act__pb2.BasicWebGuiRequest.SerializeToString,
        response_deserializer=rhbatch__pb2.RhBatchResponse.FromString,
        )
    self.checkLogoutButton = channel.unary_unary(
        '/th2.Act/checkLogoutButton',
        request_serializer=act__pb2.BasicWebGuiRequest.SerializeToString,
        response_deserializer=rhbatch__pb2.RhBatchResponse.FromString,
        )
    self.openUsersTab = channel.unary_unary(
        '/th2.Act/openUsersTab',
        request_serializer=act__pb2.BasicWebGuiRequest.SerializeToString,
        response_deserializer=rhbatch__pb2.RhBatchResponse.FromString,
        )
    self.verifyUser = channel.unary_unary(
        '/th2.Act/verifyUser',
        request_serializer=act__pb2.UserSettings.SerializeToString,
        response_deserializer=rhbatch__pb2.RhBatchResponse.FromString,
        )


class ActServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def register(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def unregister(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def login(self, request, context):
    """rpc for interaction with web GUI
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def logout(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def checkUserName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def checkFeedbackButton(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def checkHelpButton(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def checkLogoutButton(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def openUsersTab(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def verifyUser(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ActServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'register': grpc.unary_unary_rpc_method_handler(
          servicer.register,
          request_deserializer=rhbatch__pb2.RhTargetServer.FromString,
          response_serializer=rhbatch__pb2.RhSessionID.SerializeToString,
      ),
      'unregister': grpc.unary_unary_rpc_method_handler(
          servicer.unregister,
          request_deserializer=rhbatch__pb2.RhSessionID.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'login': grpc.unary_unary_rpc_method_handler(
          servicer.login,
          request_deserializer=act__pb2.LoginRequest.FromString,
          response_serializer=rhbatch__pb2.RhBatchResponse.SerializeToString,
      ),
      'logout': grpc.unary_unary_rpc_method_handler(
          servicer.logout,
          request_deserializer=act__pb2.BasicWebGuiRequest.FromString,
          response_serializer=rhbatch__pb2.RhBatchResponse.SerializeToString,
      ),
      'checkUserName': grpc.unary_unary_rpc_method_handler(
          servicer.checkUserName,
          request_deserializer=act__pb2.CheckUserNameRequest.FromString,
          response_serializer=rhbatch__pb2.RhBatchResponse.SerializeToString,
      ),
      'checkFeedbackButton': grpc.unary_unary_rpc_method_handler(
          servicer.checkFeedbackButton,
          request_deserializer=act__pb2.BasicWebGuiRequest.FromString,
          response_serializer=rhbatch__pb2.RhBatchResponse.SerializeToString,
      ),
      'checkHelpButton': grpc.unary_unary_rpc_method_handler(
          servicer.checkHelpButton,
          request_deserializer=act__pb2.BasicWebGuiRequest.FromString,
          response_serializer=rhbatch__pb2.RhBatchResponse.SerializeToString,
      ),
      'checkLogoutButton': grpc.unary_unary_rpc_method_handler(
          servicer.checkLogoutButton,
          request_deserializer=act__pb2.BasicWebGuiRequest.FromString,
          response_serializer=rhbatch__pb2.RhBatchResponse.SerializeToString,
      ),
      'openUsersTab': grpc.unary_unary_rpc_method_handler(
          servicer.openUsersTab,
          request_deserializer=act__pb2.BasicWebGuiRequest.FromString,
          response_serializer=rhbatch__pb2.RhBatchResponse.SerializeToString,
      ),
      'verifyUser': grpc.unary_unary_rpc_method_handler(
          servicer.verifyUser,
          request_deserializer=act__pb2.UserSettings.FromString,
          response_serializer=rhbatch__pb2.RhBatchResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'th2.Act', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
