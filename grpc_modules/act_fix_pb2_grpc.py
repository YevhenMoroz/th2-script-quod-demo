# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import grpc_modules.act_fix_pb2 as act__fix__pb2


class ActFixStub(object):
  """This action executes next steps:
  1) Registers checkpoint in Verifier microservice
  2) Sends passed message as is to Connectivity microservice
  3) Waits Execution Report or Business Message Reject with the same ClOrdID as in passed message
  from Connectivity microservice
  4) Returns the message repose and the Checkpoint 
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.placeOrderFIX = channel.unary_unary(
        '/th2.ActFix/placeOrderFIX',
        request_serializer=act__fix__pb2.PlaceMessageRequest.SerializeToString,
        response_deserializer=act__fix__pb2.PlaceMessageResponse.FromString,
        )
    self.placeOrderReplaceFIX = channel.unary_unary(
        '/th2.ActFix/placeOrderReplaceFIX',
        request_serializer=act__fix__pb2.PlaceMessageRequest.SerializeToString,
        response_deserializer=act__fix__pb2.PlaceMessageResponse.FromString,
        )
    self.placeOrderCancelFIX = channel.unary_unary(
        '/th2.ActFix/placeOrderCancelFIX',
        request_serializer=act__fix__pb2.PlaceMessageRequest.SerializeToString,
        response_deserializer=act__fix__pb2.PlaceMessageResponse.FromString,
        )
    self.placeOrderMultilegFIX = channel.unary_unary(
        '/th2.ActFix/placeOrderMultilegFIX',
        request_serializer=act__fix__pb2.PlaceMessageRequest.SerializeToString,
        response_deserializer=act__fix__pb2.PlaceMessageResponse.FromString,
        )
    self.placeOrderMultilegReplaceFIX = channel.unary_unary(
        '/th2.ActFix/placeOrderMultilegReplaceFIX',
        request_serializer=act__fix__pb2.PlaceMessageRequest.SerializeToString,
        response_deserializer=act__fix__pb2.PlaceMessageResponse.FromString,
        )
    self.placeQuoteFIX = channel.unary_unary(
        '/th2.ActFix/placeQuoteFIX',
        request_serializer=act__fix__pb2.PlaceMessageRequest.SerializeToString,
        response_deserializer=act__fix__pb2.PlaceMessageResponse.FromString,
        )
    self.placeMarketDataRequestFIX = channel.unary_unary(
        '/th2.ActFix/placeMarketDataRequestFIX',
        request_serializer=act__fix__pb2.PlaceMessageRequest.SerializeToString,
        response_deserializer=act__fix__pb2.PlaceMessageResponse.FromString,
        )
    self.sendMessage = channel.unary_unary(
        '/th2.ActFix/sendMessage',
        request_serializer=act__fix__pb2.PlaceMessageRequest.SerializeToString,
        response_deserializer=act__fix__pb2.SendMessageResponse.FromString,
        )


class ActFixServicer(object):
  """This action executes next steps:
  1) Registers checkpoint in Verifier microservice
  2) Sends passed message as is to Connectivity microservice
  3) Waits Execution Report or Business Message Reject with the same ClOrdID as in passed message
  from Connectivity microservice
  4) Returns the message repose and the Checkpoint 
  """

  def placeOrderFIX(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def placeOrderReplaceFIX(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def placeOrderCancelFIX(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def placeOrderMultilegFIX(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def placeOrderMultilegReplaceFIX(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def placeQuoteFIX(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def placeMarketDataRequestFIX(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def sendMessage(self, request, context):
    """Send fix message without response awaiting 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ActFixServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'placeOrderFIX': grpc.unary_unary_rpc_method_handler(
          servicer.placeOrderFIX,
          request_deserializer=act__fix__pb2.PlaceMessageRequest.FromString,
          response_serializer=act__fix__pb2.PlaceMessageResponse.SerializeToString,
      ),
      'placeOrderReplaceFIX': grpc.unary_unary_rpc_method_handler(
          servicer.placeOrderReplaceFIX,
          request_deserializer=act__fix__pb2.PlaceMessageRequest.FromString,
          response_serializer=act__fix__pb2.PlaceMessageResponse.SerializeToString,
      ),
      'placeOrderCancelFIX': grpc.unary_unary_rpc_method_handler(
          servicer.placeOrderCancelFIX,
          request_deserializer=act__fix__pb2.PlaceMessageRequest.FromString,
          response_serializer=act__fix__pb2.PlaceMessageResponse.SerializeToString,
      ),
      'placeOrderMultilegFIX': grpc.unary_unary_rpc_method_handler(
          servicer.placeOrderMultilegFIX,
          request_deserializer=act__fix__pb2.PlaceMessageRequest.FromString,
          response_serializer=act__fix__pb2.PlaceMessageResponse.SerializeToString,
      ),
      'placeOrderMultilegReplaceFIX': grpc.unary_unary_rpc_method_handler(
          servicer.placeOrderMultilegReplaceFIX,
          request_deserializer=act__fix__pb2.PlaceMessageRequest.FromString,
          response_serializer=act__fix__pb2.PlaceMessageResponse.SerializeToString,
      ),
      'placeQuoteFIX': grpc.unary_unary_rpc_method_handler(
          servicer.placeQuoteFIX,
          request_deserializer=act__fix__pb2.PlaceMessageRequest.FromString,
          response_serializer=act__fix__pb2.PlaceMessageResponse.SerializeToString,
      ),
      'placeMarketDataRequestFIX': grpc.unary_unary_rpc_method_handler(
          servicer.placeMarketDataRequestFIX,
          request_deserializer=act__fix__pb2.PlaceMessageRequest.FromString,
          response_serializer=act__fix__pb2.PlaceMessageResponse.SerializeToString,
      ),
      'sendMessage': grpc.unary_unary_rpc_method_handler(
          servicer.sendMessage,
          request_deserializer=act__fix__pb2.PlaceMessageRequest.FromString,
          response_serializer=act__fix__pb2.SendMessageResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'th2.ActFix', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
