syntax = 'proto3';
package th2.simulator.template;

import "simulator.proto";
import "infra.proto";

option java_multiple_files = true;
option java_package = "com.exactpro.th2.simulator.template.grpc";

message TemplateFixCreate {
    map<string, th2.Value> fields = 1;
    th2.ConnectionID connection_id = 2;
}

message TemplateQuodNOSRule {
    th2.ConnectionID connection_id = 1;
}

message TemplateQuodOCRRule {
    th2.ConnectionID connection_id = 1;
}

message TemplateQuodSingleExecRule {
    th2.ConnectionID connection_id = 1;
    repeated TemplateNoPartyIDs no_party_ids = 2;
    int32 cum_qty = 3;
}
message TemplateNoPartyIDs {
    string party_id = 2;
    string party_id_source = 3;
    string party_role = 4;
}

message TemplateQuodMDRRule {
    th2.ConnectionID connection_id = 1;
    string sender = 2;
    map<int32, int32>  md_entry_size = 3;
    map<int32, int32> md_entry_px = 4;
}

message TemplateQuodRFQRule {
    th2.ConnectionID connection_id = 1;
}

message TemplateQuodRFQTRADERule {
    th2.ConnectionID connection_id = 1;
}

service TemplateSimulatorService {
    rpc createRule_FIX(TemplateFixCreate) returns (th2.RuleID) {}
    rpc createKotlinRule_FIX(TemplateFixCreate) returns (th2.RuleID) {}
    rpc createQuodNOSRule(TemplateQuodNOSRule) returns (th2.RuleID) {}
    rpc createQuodOCRRule(TemplateQuodOCRRule) returns (th2.RuleID) {}
    rpc createQuodSingleExecRule(TemplateQuodSingleExecRule) returns (th2.RuleID) {}
    rpc createQuodMDRRule(TemplateQuodMDRRule) returns (th2.RuleID) {}
    rpc createQuodRFQRule(TemplateQuodRFQRule) returns (th2.RuleID) {}
    rpc createQuodRFQTRADERule(TemplateQuodRFQTRADERule) returns (th2.RuleID) {}

}